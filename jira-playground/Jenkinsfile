#!groovy
def ticketKey

pipeline {
    agent none
    options {
        buildDiscarder(logRotator(numToKeepStr: '10'))
        timeout(time: 120, unit: 'MINUTES')
    }
    environment {
        JIRA_SITE = 'banana'
    }
    stages {
        stage('Create Jira Ticket') {
            agent any
            steps {
                script {
                    def testIssue = [fields: [
                            project    : [key: 'FAN'],
                            issuetype  : [name: 'Task'],
                            summary    : 'Deploying to stage and live',
                            description: 'New JIRA Created from Jenkins.'
                    ]]
                    response = jiraNewIssue issue: testIssue
                    ticketKey = response.data.key
                }
                script {
                    transition(ticketKey, 'Start Progress')
                }

                script {
                    transition(ticketKey, 'Done')
                }
            }
        }
    }
}

private void transition(ticketKey, transitionName) {
    def transitions = jiraGetIssueTransitions idOrKey: ticketKey
    def transition = transitions.data.transitions.find { it.name == transitionName }
    if (null == transition) {
        def availableTransitions = transitions.data.transitions.collect { it.name }.join(', ')
        error message: "there is no '${transitionName}' available, only [${availableTransitions}]"
    }
    def transitionid = transition.id
    def transitionInput =
            [
                    transition: [
                            id: transitionid,
                    ]
            ]
    jiraTransitionIssue idOrKey: ticketKey, input: transitionInput
}
